{"version":3,"sources":["App.jsx","index.jsx"],"names":["useStyles","makeStyles","root","flexGrow","columns","field","label","options","filter","sort","name","customBodyRender","value","tableMeta","updateValue","FormControlLabel","control","TextField","onChange","event","target","type","inputProps","min","max","step","rows","tableBodyMaxHeight","pagination","download","print","search","searchOpen","selectableRows","sortOrder","direction","selectableRowsOnClick","App","classes","className","position","variant","Card","CardContent","style","width","Grid","container","spacing","item","md","lg","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAWMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,OAIRC,EAAU,CACd,CACEC,MAAO,KACPC,MAAO,KACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEC,KAAM,OACNJ,MAAO,OACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,EACNE,iBAAkB,SAACC,EAAOC,EAAWC,GAAnB,OAChB,cAACC,EAAA,EAAD,CACEH,MAAOA,EACPI,QAAS,cAACC,EAAA,EAAD,CAAWL,MAAOA,IAC3BM,SAAU,SAAAC,GAAK,OAAIL,EAAYK,EAAMC,OAAOR,aAKpD,CACEP,MAAO,QACPC,MAAO,QACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,EACNE,iBAAkB,SAACC,EAAOC,EAAWC,GAOnC,OACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEL,MAAOA,GAAS,GAChBS,KAAK,SACLC,WAZW,CACjBC,IAAK,EACLC,IAAK,EACLC,KAAM,OAWJP,SAAU,SAAAC,GAAK,OAAIL,EAAYK,EAAMC,OAAOR,aAMtD,CACEP,MAAO,QACPC,MAAO,QACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,EAENE,iBAAkB,SAACC,EAAOC,EAAWC,GAOnC,OACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEL,MAAOA,GAAS,GAChBS,KAAK,SACLC,WAZW,CACjBC,IAAK,EACLC,IAAK,IACLC,KAAM,MAWJP,SAAU,SAAAC,GAAK,OAAIL,EAAYK,EAAMC,OAAOR,cAQlDc,EAAO,CACX,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,IACtB,CAAC,EAAG,WAAY,IAAM,KAGlBnB,EAAU,CACdoB,mBAAoB,QACpBC,YAAY,EACZpB,QAAQ,EACRqB,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,YAAY,EACZC,eAAgB,SAChBC,UAAW,CACTxB,KAAM,KACNyB,UAAW,OAEbC,uBAAuB,GA0BVC,MAvBf,WACE,IAAMC,EAAUtC,IAEhB,OACE,sBAAKuC,UAAWD,EAAQpC,KAAxB,UACE,cAAC,IAAD,CAAWsC,SAAS,SAApB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAeC,QAAQ,KAAvB,6BAGJ,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAaC,MAAO,CAAEC,MAAO,QAA7B,SACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CAAcC,KAAM1B,EAAMtB,QAASA,EAASG,QAASA,gBCxInE8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c97e8e50.chunk.js","sourcesContent":["import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst columns = [\n  { \n    field: 'id', \n    label: 'ID', \n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n  {\n    name: \"name\",\n    label: \"Name\",\n    options: {\n      filter: true,\n      sort: true,\n      customBodyRender: (value, tableMeta, updateValue) => (\n        <FormControlLabel\n          value={value}\n          control={<TextField value={value} />}\n          onChange={event => updateValue(event.target.value)}\n        />\n      )\n    }\n  },\n  {\n    field: 'speed',\n    label: 'Speed',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        const inputProps = {\n          min: 0,\n          max: 1,\n          step: 0.01,\n        };\n\n        return (\n          <FormControlLabel\n            control={\n              <TextField \n                value={value || ''} \n                type='number' \n                inputProps={inputProps}\n              />}\n            onChange={event => updateValue(event.target.value)}\n          />\n        )\n      }\n    }\n  },\n  {\n    field: 'pause',\n    label: 'Pause',\n    options: {\n      filter: false,\n      sort: false,\n      \n      customBodyRender: (value, tableMeta, updateValue) => {\n        const inputProps = {\n          min: 0,\n          max: 100,\n          step: 0.1,\n        };\n\n        return (\n          <FormControlLabel\n            control={\n              <TextField \n                value={value || ''} \n                type='number' \n                inputProps={inputProps}\n              />}\n            onChange={event => updateValue(event.target.value)}\n          />\n        )\n      }\n    }\n  },\n];\n\nconst rows = [\n  [1, 'motion_1', 0.35, 0.3 ],\n  [2, 'motion_2', 0.42, 0.4 ],\n  [3, 'motion_3', 0.45, 0.4 ],\n  [4, 'motion_4', 0.16, 0.1 ],\n  [5, 'motion_5', 0.22, 0.2 ],\n  [6, 'motion_6', 0.15, 0.1 ],\n  [7, 'motion_7', 0.44, 0.4 ],\n  [8, 'motion_8', 0.36, 0.3 ],\n  [9, 'motion_9', 0.65, 0.6 ],\n];\n\nconst options = {\n  tableBodyMaxHeight: '400px',\n  pagination: false,\n  filter: false,\n  download: false,\n  print: false,\n  search: false,\n  searchOpen: true,\n  selectableRows: 'single',\n  sortOrder: {\n    name: 'ID',\n    direction: 'asc'\n  },\n  selectableRowsOnClick: true\n};\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MuiAppBar position=\"static\">\n        <MuiToolbar>\n          <MuiTypography variant=\"h6\">Akushon App</MuiTypography>\n        </MuiToolbar>\n      </MuiAppBar>\n      <Card>\n        <CardContent style={{ width: '100%' }}>\n          <Grid container spacing={3}>\n            <Grid item md={12} lg={4}>\n              <MUIDataTable data={rows} columns={columns} options={options} />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}